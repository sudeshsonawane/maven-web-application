pipeline
{
	agent any
	
		tools
		{
			maven "maven3.8.5"
        }
        
        triggers
		{
		  pollSCM '* * * * *'
        }
        //Discard old build after 5 builds
		options
		 {
		  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
		
		  //adding timestamp to console output
		  timestamps()
		 }

		stages
		{
			    //Checkout code stage
				stage('CheckoutCode')
				{
					steps
				    {
				        sendSlackNotifications('STARTED')
						git branch: 'development', credentialsId: '308e168c-bb4a-4ec2-835e-b30d5305ad80', url: 'https://github.com/sudeshsonawane/maven-web-application.git'
					}
                }
				
				//Build Stage
				stage('Build')
				{
					steps
					{
						sh"mvn clean package"
					}
				}
				
				//Execute SonarQube Report
				stage('ExecuteSonarRubeReport')
				{
					steps
					{
						sh "mvn sonar:sonar"
					}
				}
				
				//Upload Artifacts into artifactory repo
				stage('UploadIntoNexus')
				{
					steps
					{
						sh "mvn deploy"
					}
				}
				
				//Deploy Application to Tomcat server
				stage('DeployApplicationToTomcatServer')
				{
					steps
					{
						sshagent(['a200758e-6add-4264-87fb-92f18560b887'])
						{
						    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.185:/opt/apache-tomcat-9.0.63/webapps/"
    					}
					}
				}

		}//Stages closing
		
		post
		{
			success
		   	{
		   	    sendSlackNotifications('SUCCESS')
			}
			failure
			{
			    sendSlackNotifications('FAILURE')
		    }
		}


}//Pipeline Closing


def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'walmart')
}
